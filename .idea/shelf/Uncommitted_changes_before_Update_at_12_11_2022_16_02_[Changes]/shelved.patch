Index: app/src/main/java/com/example/myapplication/ui/theme/Type.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.ui.theme\r\n\r\nimport androidx.compose.material.MaterialTheme\r\nimport androidx.compose.material.Typography\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.Font\r\nimport androidx.compose.ui.text.font.FontFamily\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.unit.sp\r\nimport com.example.myapplication.R\r\n\r\nval H1Font = FontFamily(\r\n    Font(R.font.bebas_neue, FontWeight.Normal)\r\n)\r\n\r\n// Set of Material typography styles to start with\r\nval Typography = Typography(\r\n     defaultFontFamily = FontFamily(Font(R.font.bebas_neue)),\r\n    body1 = TextStyle(\r\n        fontWeight = FontWeight.Normal,\r\n        fontSize = 16.sp\r\n    ),\r\n    h1 = TextStyle(\r\n        fontSize = 70.sp,\r\n        color = Green,\r\n    ),\r\n    /* Other default text styles to override\r\n    button = TextStyle(\r\n        fontFamily = FontFamily.Default,\r\n        fontWeight = FontWeight.W500,\r\n        fontSize = 14.sp\r\n    ),\r\n    caption = TextStyle(\r\n        fontFamily = FontFamily.Default,\r\n        fontWeight = FontWeight.Normal,\r\n        fontSize = 12.sp\r\n    )\r\n    */\r\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/ui/theme/Type.kt b/app/src/main/java/com/example/myapplication/ui/theme/Type.kt
--- a/app/src/main/java/com/example/myapplication/ui/theme/Type.kt	(revision 02149be7c30d36ff4048e6ecc4297c9558d4b854)
+++ b/app/src/main/java/com/example/myapplication/ui/theme/Type.kt	(date 1668278519707)
@@ -13,6 +13,10 @@
     Font(R.font.bebas_neue, FontWeight.Normal)
 )
 
+val NormalFont = FontFamily(
+    Font(R.font.roboto_regular, FontWeight.Normal)
+)
+
 // Set of Material typography styles to start with
 val Typography = Typography(
      defaultFontFamily = FontFamily(Font(R.font.bebas_neue)),
Index: app/src/main/java/com/example/myapplication/ui/screens/RoutineFinished.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.ui.screens\r\n\r\nimport androidx.compose.runtime.Composable\r\nimport com.example.myapplication.viewmodel.RoutinesViewModel\r\n\r\n@Composable\r\nfun RoutineFinished(\r\n    viewModel: RoutinesViewModel\r\n){\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/ui/screens/RoutineFinished.kt b/app/src/main/java/com/example/myapplication/ui/screens/RoutineFinished.kt
--- a/app/src/main/java/com/example/myapplication/ui/screens/RoutineFinished.kt	(revision 02149be7c30d36ff4048e6ecc4297c9558d4b854)
+++ b/app/src/main/java/com/example/myapplication/ui/screens/RoutineFinished.kt	(date 1668279776600)
@@ -1,11 +1,112 @@
 package com.example.myapplication.ui.screens
 
+import androidx.compose.foundation.background
+import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.material.*
 import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.clip
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import com.example.myapplication.ui.components.BackButton
+import com.example.myapplication.ui.components.Button1
+import com.example.myapplication.ui.theme.*
 import com.example.myapplication.viewmodel.RoutinesViewModel
 
 @Composable
 fun RoutineFinished(
-    viewModel: RoutinesViewModel
+    viewModel: RoutinesViewModel,
+    viewRoutineHandler: () -> Unit,
+    routineId: String?,
+    backButtonHandler: () -> Unit
 ){
+    val ratingValue: Int = 5
+    Column(horizontalAlignment = Alignment.CenterHorizontally,
+        modifier = Modifier
+            .fillMaxWidth()
+            .fillMaxHeight()
+            .background(Color.Black),
+    ) {
+        Row(verticalAlignment = Alignment.CenterVertically) {
+
+            Column(
+                horizontalAlignment = Alignment.CenterHorizontally,
+                modifier = Modifier
+                    .fillMaxSize()
+                    .padding(top = 60.dp),
+            ) {
 
+                Text(text = "asff", fontFamily = H1Font, fontSize = 60.sp, color = Green)
+
+                Column(
+                    horizontalAlignment = Alignment.CenterHorizontally,
+                    modifier = Modifier
+                        .padding(top = 50.dp) //este padding sirve como margin
+                        .clip(RoundedCornerShape(30.dp))
+                        .fillMaxWidth(0.7f)
+                        .background(GrayTransparency)
+                        .padding(20.dp) //este como padding per se, ya con el background
+                ) {
+                    Text(text = "Well done", fontFamily = H1Font, fontSize = 60.sp, color = Color.White)
+                    LinearProgressIndicator(
+                        progress = 0.7f,
+                        color = Green,
+                        modifier = Modifier.height(15.dp).clip(RoundedCornerShape(30.dp))
+                    )
+                    Text(
+                        text = "You have surpassed the expected progress for todays workout, by 20%",
+                        fontFamily = NormalFont,
+                        fontSize = 20.sp,
+                        color = Color.White,
+                        modifier = Modifier.padding(top = 20.dp)
+                    )
+                    Spacer(modifier = Modifier.height(20.dp))
+                    Text(
+                        text = "Review this routine:",
+                        fontFamily = NormalFont,
+                        fontSize = 20.sp,
+                        color = Color.White,
+                        modifier = Modifier.padding(top = 20.dp)
+                    )
+                    Spacer(modifier = Modifier.height(5.dp))
+                    Text(
+                        text = "Normal",
+                        fontFamily = NormalFont,
+                        fontSize = 20.sp,
+                        color = Color.White,
+                        modifier = Modifier.padding(top = 20.dp)
+                    )
+                    Spacer(modifier = Modifier.height(5.dp))
+                    Slider(
+                        value = ratingValue,
+                        steps = 0,
+                        valueRange = 1F..5F,
+                        colors = SliderDefaults.colors(
+                            activeTickColor = Green,
+                            inactiveTickColor = Gray,
+                            inactiveTrackColor = Color.DarkGray,
+                            activeTrackColor = Green,
+                            thumbColor = Green
+                        ),
+                        onValueChange = { ratingValue  },
+                        modifier = Modifier.padding(horizontal = 20.dp)
+                    )
+                    Spacer(modifier = Modifier.height(20.dp))
+                    Button1(fontSize = 13, text = "Next", handler = {})
+                    Spacer(modifier = Modifier.height(20.dp))
+                }
+            }
+        }
+    }
+
+}
+
+@Preview
+@Composable
+fun tryFinished(){
+    RoutineFinished(viewModel = RoutinesViewModel(), viewRoutineHandler = { /*TODO*/ }, backButtonHandler = {}, routineId = "as")
 }
\ No newline at end of file
